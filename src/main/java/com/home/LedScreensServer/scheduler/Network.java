package com.home.LedScreensServer.scheduler;

import com.home.LedScreensServer.model.ModelData;
import lombok.extern.slf4j.Slf4j;
import org.jnetpcap.Pcap;
import org.jnetpcap.PcapException;
import org.jnetpcap.PcapHeader;
import org.jnetpcap.PcapIf;
import org.jnetpcap.util.PcapUtils;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.stereotype.Component;

import java.util.List;

@Slf4j
@Component
public class Network {
    //private final ModelData modelData;
    //private PcapIf networkIf;
    //private Pcap pcapListener;
    //private Pcap pcapSender;

    public Network(/*ModelData modelData*/) {
        //this.modelData = modelData;
        //updateNetwork();

//        try {
//            pcapListener = Pcap.create(Pcap.findAllDevs().get(0));
//            pcapSender = Pcap.create(Pcap.findAllDevs().get(0));
//            pcapSender.activate();
//        } catch (PcapException e) {
//            log.error(e.getMessage());
//        }
//        runListener();
    }

    //@Scheduled(fixedDelay = 5000)
//    private void updateNetwork() {
//        try {
//            log.debug("Updating network");
//            List<PcapIf> networks = Pcap.findAllDevs();
//            this.networkIf = networks.get(0);
//            for (PcapIf network : networks) {
//                if (network.description().toString().contains("ASIX USB to Gigabit Ethernet Family Adapter")) {
//                    this.network = network;
//                }
//            }
//
//            if (this.networkIf == null) {
//                log.error("No network found");
//            }
//
//        } catch (PcapException e) {
//            log.error(e.getMessage());
//        }
//    }

//    private void runListener() {
//        log.debug("Run listener");
//        Thread thread = new Thread(() -> {
//            try {
//                pcapListener.setSnaplen(16 * 1024);
//                pcapListener.setPromisc(true);
//                pcapListener.activate();
//                pcapListener.loop(0, (String message, PcapHeader header, byte[] packet) -> {
//
//                    if (packet.length == 1070) {
//                        log.debug(header.toString());
//                        log.debug(PcapUtils.toHexString(packet, 0, packet.length));
//                    }
//
//                }, "");
//            } catch (PcapException e) {
//                log.error(e.getMessage());
//            }
//        });
//        thread.start();
//    }

    //@Scheduled(fixedDelay = 25)
//    private void detectReceiverCard() {
//        try {
//            log.trace("Detect ReceiverCard");
//            //pcapSender.sendPacket(PcapUtils.parseHexString("112233445566222233445566070000ffffff
//            //pcapSender.sendPacket(PcapUtils.parseHexString("1122334455662222334455660700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
//            //pcap.sendPacket(PcapUtils.parseHexString
//
//            //pcapSender.sendPacket(PcapUtils.parseHexString());
//            //
//            pcapSender.sendPacket(PcapUtils.parseHexString("1122334455662222334455660107000000000000000000000000000000000000000000ff0500ffffff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
//            pcapSender.sendPacket(PcapUtils.parseHexString("1122334455662222334455660affffffff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
//
//            pcapSender.sendPacket(PcapUtils.parseHexString("11223344556622223344556655 0000000000800888 0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff"));
//            pcapSender.sendPacket(PcapUtils.parseHexString
//            pcapSender.sendPacket(PcapUtils.parseHexString("1122334455662222334455665500020000008008880000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff"));
//            pcapSender.sendPacket(PcapUtils.parseHexString
//            pcapSender.sendPacket(PcapUtils.parseHexString("1122334455662222334455665500040000008008880000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff"));
//
//            //pcapSender.sendPacket(PcapUtils.parseHexString("1122334455662222334455660107000000000000000000000000000000000000000000ff0500ffffff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
//            //pcapSender.sendPacket(PcapUtils.parseHexString("1122334455662222334455660affffffff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000"));
//
//
//        } catch (PcapException e) {
//            log.error(e.getMessage());
//        }
//    }

}
